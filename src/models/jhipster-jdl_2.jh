// ENUMERACIONES
enum EnfermedadesEnum {
ASMA,
DIABETES,
HIPERTENSION,
OBESIDAD,
INSUFCARDIACA,
INSUFRENAL,
OTROS
}

enum AlergiasEnum {
 SALICILATOS,
 PIRAZOLONAS,
 PENISILINA,
 OTROS
}

enum IntoleranciasEnum {
 GLUTEN,
 LACTOSA,
 OTROS
}

enum RegimenesEnum {
 NO,
 HIPOGLUCIDOS,
 HIPOLIPIDOS,
 HIPOSODICOS,
 HIPERGLUCIDOS,
 HIPERLIPIDOS
}

enum BebidasEnum {
 NO,
 SISIEMPRE,
 SIAVECES
}

enum EjerciciosEnum {
 NO,
 UNDIA,
 TRESDIAS,
 TODOSLOSDIAS
}

enum DiasSemanaEnum {
  LUNES,
  MARTES,
  MIERCOLES,
  JUEVES,
  VIERNES,
  SABADO,
  DOMINGO
}
//Entidades
entity Turno{
  fechaTurno LocalDate,
  horaTurno String,
  duracion String
}


entity Paciente{
  nombrePaciente String,
  apellidoPaciente String,
  direccionPaciente String,
  telefonoPaciente String,
  emailPaciente String,
  fechaNacPaciente LocalDate,
  generoPaciente String
}


entity Medico{
  codigoMedico String,
  nombreMedico String,
  apellidoMedico String,
  direccionMedico String,
  telefonoMedico String,
  emailMedico String,
  matriculaMedico String,
  horarioIMedico String,
  horarioEMedico String,
  porcentaje String
}


entity Provincia{
  nombreProvincia String
}
entity CodigoPostal{
  codigo String,
  nombreCiudad String
}
entity ObraSocial{
  codigoObraSocial String,
  nombreOSocial String,
  direecionOSocial String,
  telefonoOSocial String,
  emailOSocial String
}
entity Especialidad{
  codigoEspecialidad String,
  nombreEspecialidad String,
  descripcionEspecialidad String
}
entity ConsultaPractica{
  attribute String
}
entity Empresa{
  nombreEmpresa String,
  direccionEmpresa String,
  telefonoEmpresa String,
  emailEmpresa String
}

entity Sucursal{
  nombreSucursal String,
  numeroSucursal Integer
}
entity Personal{
  nombrePersonal String,
  apellidoPersonal String,
  direccionPersonal String,
  telefonoPersonal String,
  emailPersonal String,
  cargoPersonal String
}
entity Diagnostico{
  idDiagnostico String,
  codigoDiagnostico String,
  nombreDiagnostico String,
  descripcionDiagnostico String
}
entity MedicoEspecialidadDiagnostico{
  idMedico String,
  idEspecialidad String,
  idDiagnostico String
}
entity MedicoObraSocial{
  idMedico String,
  idOSocial String,
  observaciones String
}
entity PacienteObraSocial{
  idPaciente String,
  idOSocial String,
  nroAfiliado String,
  planAfiliado String,
  vigencia String,
  estado Boolean
}
entity Calendario{
  idCalendario String,
  anioCalendario String,
  mesCalendario String
}
entity PacienteTurno{
  idPaciente String,
  idTurno String,
  observacionesTurno String
}
entity MedicoCalendario{
  idMedico String,
  idCalendario String,
  estado Boolean
}
entity MontoConsultaPractica{
  idMontoConsPract String,
  monto String
}
entity Observacion{
  idObservacion String,
  descripcionObservacion String
}
entity ConsPractObservacion{
  idConsPract String,
  idObservacion String
}
entity Digitalizacion{
  idDigitalizacion String,
  descripcionDigitalizacion String,
  elementoDigitalizacion String
}

entity Enfermedad{
	valor EnfermedadesEnum required
}

entity Alergia{
	valor AlergiasEnum required
}

entity Intolerancia{
	valor IntoleranciasEnum required
}

entity Regimen{
	valor RegimenesEnum required
}

entity Bebida{
	valor BebidasEnum required
}

entity Ejercicio{
	valor EjerciciosEnum required
}

entity AntecedentesPersonales{
    tabaco Boolean,
    tecafe Boolean
}

entity AntecedentesFamiliares{
  vivoAF Boolean,
  causaMuerteAF String
}

entity Dias{
  valor DiasSemanaEnum required
}

entity Ficha{
	fechaIngreso LocalDate
}
// El campo OSocial aparecer√° como una lista en Paciente
relationship OneToOne {
	Paciente{pacienteObraSocial} to ObraSocial,
  Empresa{sucursal(nombreSucursal)} to Sucursal    
}

relationship OneToMany{
	Provincia{codigopostal} to CodigoPostal{provincia(nombreProvincia)},
  Medico{ficha} to Ficha{medico(nombreMedico)}
}

relationship ManyToOne {
  ObraSocial{pacienteObraSocial} to PacienteObraSocial
}


relationship ManyToMany{
	Medico{obrasocial(medicoObraSocial)} to ObraSocial{medico(nombreMedico)},
	Medico{especialidad(codigoEspecialidad)} to Especialidad{medico(nombreMedico)},
  Medico{dias(valor)} to Dias,
  AntecedentesPersonales{enfermedades(valor)} to Enfermedad,
  AntecedentesPersonales{alergias(valor)} to Alergia,
  AntecedentesPersonales{intolerancias(valor)} to Intolerancia,
  AntecedentesPersonales{regimenes(valor)} to Regimen,
  AntecedentesPersonales{bebidas(valor)} to Bebida,
  AntecedentesPersonales{ejercicios(valor)} to Ejercicio
}

// Set pagination options
//paginate CodigoPostal, ObraSocial with infinite-scroll
paginate CodigoPostal, Paciente, Especialidad, Medico, ObraSocial with pagination

dto * with mapstruct

// Set service options to all
service all with serviceImpl
// Set an angular suffix
//angularSuffix * with cpsj_ang
